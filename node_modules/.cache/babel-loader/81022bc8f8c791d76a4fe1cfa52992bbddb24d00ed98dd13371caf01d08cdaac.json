{"ast":null,"code":"import \"core-js/modules/web.url-search-params.delete.js\";\nimport \"core-js/modules/web.url-search-params.has.js\";\nimport \"core-js/modules/web.url-search-params.size.js\";\nimport axios from 'axios'; // Ensure Axios is imported\n\nexport default {\n  name: 'ReportsView',\n  data() {\n    return {\n      user_id: localStorage.getItem('user_id'),\n      showRating: false,\n      rating: 0\n    };\n  },\n  methods: {\n    downloadReport() {\n      const url = `http://localhost/report.php?user_id=${this.user_id}`;\n      axios({\n        url: url,\n        method: 'GET',\n        responseType: 'blob' // Important\n      }).then(response => {\n        // Create a new Blob object using the response data of the file\n        const fileURL = window.URL.createObjectURL(new Blob([response.data]));\n        const fileLink = document.createElement('a');\n        fileLink.href = fileURL;\n        fileLink.setAttribute('download', 'financial_report.pdf');\n        document.body.appendChild(fileLink);\n        fileLink.click();\n        fileLink.remove(); // Clean up after download\n        this.showRating = true;\n      }).catch(error => {\n        console.error(\"Failed to download the file:\", error);\n      });\n    },\n    setRating(star) {\n      this.rating = star;\n    },\n    submitRating() {\n      alert(`Thank you for your review! You rated this ${this.rating} out of 5 stars.`);\n      this.showRating = false; // Hide the rating UI\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","user_id","localStorage","getItem","showRating","rating","methods","downloadReport","url","method","responseType","then","response","fileURL","window","URL","createObjectURL","Blob","fileLink","document","createElement","href","setAttribute","body","appendChild","click","remove","catch","error","console","setRating","star","submitRating","alert"],"sources":["/Users/eshangulati/Documents/GitHub/eshangulati.github.io/my-app/src/components/ReportsPage.vue"],"sourcesContent":["<template>\n    <div class=\"reports-container\">\n        <header class=\"reports-header\">\n            <h1>Reports</h1>\n            <nav class=\"nav-buttons\">\n            <router-link :to=\"`/dashboard/${user_id}`\">\n                <button class=\"nav-button\">Dashboard</button>\n            </router-link>\n            <router-link :to=\"`/budget/${user_id}`\">\n                <button class=\"nav-button\">Budget</button>\n            </router-link>\n            <router-link :to=\"`/transaction/${user_id}`\">\n                <button class=\"nav-button\">Transactions</button>\n            </router-link>\n            <router-link :to=\"`/savings/${user_id}`\">\n                <button class=\"nav-button\">Savings</button>\n            </router-link>\n            </nav>\n        </header>\n    </div>\n    <button @click=\"downloadReport\" class=\"nav-button\">Download Report</button>\n    <div v-if=\"showRating\">\n            <div class=\"rating\">\n                <span v-for=\"star in [5, 4, 3, 2, 1]\" :key=\"star\"\n                      @click=\"setRating(star)\"\n                      :class=\"{'star': true, 'selected': (rating >= star)}\">\n                    â˜…\n                </span>\n            </div>\n            <button @click=\"submitRating\" class=\"submit-button\">Submit Rating</button>\n    </div>\n  </template>\n  \n  <script>\n  import axios from 'axios'; // Ensure Axios is imported\n  \n  export default {\n    name: 'ReportsView',\n    data() {\n        return {\n            user_id: localStorage.getItem('user_id'),\n            showRating: false,\n            rating: 0\n        }\n    },\n    methods: {\n        downloadReport() {\n    const url = `http://localhost/report.php?user_id=${this.user_id}`;\n    axios({\n        url: url,\n        method: 'GET',\n        responseType: 'blob', // Important\n    })\n    .then((response) => {\n        // Create a new Blob object using the response data of the file\n        const fileURL = window.URL.createObjectURL(new Blob([response.data]));\n        const fileLink = document.createElement('a');\n        fileLink.href = fileURL;\n        fileLink.setAttribute('download', 'financial_report.pdf');\n        document.body.appendChild(fileLink);\n        \n        fileLink.click();\n        fileLink.remove(); // Clean up after download\n        this.showRating = true;\n    })\n    .catch(error => {\n        console.error(\"Failed to download the file:\", error);\n    });\n    },\n    setRating(star) {\n            this.rating = star;\n    },\n    submitRating() {\n        alert(`Thank you for your review! You rated this ${this.rating} out of 5 stars.`);\n        this.showRating = false; // Hide the rating UI\n    }\n    }\n  }\n  </script>\n\n<style scoped>\n.reports-container {\n    padding: 20px;\n}  \n.reports-header {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    flex-wrap: wrap; /* Allows items to wrap on smaller screens */\n}\n\n.nav-buttons button, .nav-button {\n    margin: 5px;\n    padding: 10px 20px;\n    border: none;\n    border-radius: 10px;\n    background-color: #4dd0e1;\n    color: white;\n    cursor: pointer;\n    font-size: 16px;\n    transition: background-color 0.3s;\n}\n\n.rating {\n    margin-top: 20px;\n    font-size: 25px;\n    text-align: center; /* Center align stars */\n}\n\n.star {\n    cursor: pointer;\n    color: #ddd;\n}\n\n.star.selected {\n    color: gold;\n}\n\n.submit-button {\n    display: block; /* Make the button take the full width */\n    width: 100%;\n    margin-top: 10px;\n    padding: 10px 20px;\n    font-size: 16px;\n    background-color: #4CAF50;\n    color: white;\n    border: none;\n    border-radius: 5px;\n    cursor: pointer;\n}\n\n/* Media Queries */\n@media (max-width: 768px) {\n    .reports-header {\n        flex-direction: column;\n        align-items: stretch;\n    }\n\n    .nav-buttons {\n        width: 100%;\n        margin-top: 10px;\n    }\n\n    .nav-buttons button, .nav-button {\n        width: 100%;\n        margin: 5px 0; /* Adjust margin for vertical stacking */\n    }\n\n    .rating {\n        font-size: 20px; /* Smaller stars for smaller screens */\n    }\n}\n\n@media (max-width: 480px) {\n    .reports-header {\n        padding: 10px;\n    }\n\n    .nav-button {\n        font-size: 14px;\n        padding: 8px 10px;\n    }\n\n    .submit-button {\n        font-size: 14px;\n        padding: 8px 10px;\n    }\n}\n</style>\n\n  "],"mappings":";;;AAkCE,OAAOA,KAAI,MAAO,OAAO,EAAE;;AAE3B,eAAe;EACbC,IAAI,EAAE,aAAa;EACnBC,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,OAAO,EAAEC,YAAY,CAACC,OAAO,CAAC,SAAS,CAAC;MACxCC,UAAU,EAAE,KAAK;MACjBC,MAAM,EAAE;IACZ;EACJ,CAAC;EACDC,OAAO,EAAE;IACLC,cAAcA,CAAA,EAAG;MACrB,MAAMC,GAAE,GAAK,uCAAsC,IAAI,CAACP,OAAQ,EAAC;MACjEH,KAAK,CAAC;QACFU,GAAG,EAAEA,GAAG;QACRC,MAAM,EAAE,KAAK;QACbC,YAAY,EAAE,MAAM,CAAE;MAC1B,CAAC,EACAC,IAAI,CAAEC,QAAQ,IAAK;QAChB;QACA,MAAMC,OAAM,GAAIC,MAAM,CAACC,GAAG,CAACC,eAAe,CAAC,IAAIC,IAAI,CAAC,CAACL,QAAQ,CAACZ,IAAI,CAAC,CAAC,CAAC;QACrE,MAAMkB,QAAO,GAAIC,QAAQ,CAACC,aAAa,CAAC,GAAG,CAAC;QAC5CF,QAAQ,CAACG,IAAG,GAAIR,OAAO;QACvBK,QAAQ,CAACI,YAAY,CAAC,UAAU,EAAE,sBAAsB,CAAC;QACzDH,QAAQ,CAACI,IAAI,CAACC,WAAW,CAACN,QAAQ,CAAC;QAEnCA,QAAQ,CAACO,KAAK,CAAC,CAAC;QAChBP,QAAQ,CAACQ,MAAM,CAAC,CAAC,EAAE;QACnB,IAAI,CAACtB,UAAS,GAAI,IAAI;MAC1B,CAAC,EACAuB,KAAK,CAACC,KAAI,IAAK;QACZC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;MACxD,CAAC,CAAC;IACF,CAAC;IACDE,SAASA,CAACC,IAAI,EAAE;MACR,IAAI,CAAC1B,MAAK,GAAI0B,IAAI;IAC1B,CAAC;IACDC,YAAYA,CAAA,EAAG;MACXC,KAAK,CAAE,6CAA4C,IAAI,CAAC5B,MAAM,kBAAkB,CAAC;MACjF,IAAI,CAACD,UAAS,GAAI,KAAK,EAAE;IAC7B;EACA;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}