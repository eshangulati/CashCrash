{"ast":null,"code":"import axios from 'axios';\nexport default {\n  name: 'SavingsView',\n  data() {\n    return {\n      user_id: localStorage.getItem('user_id'),\n      savingsGoals: [],\n      budgets: [],\n      newGoalCategory: '',\n      newGoalAmount: 0\n    };\n  },\n  created() {\n    this.fetchSavingsGoals();\n    this.fetchBudgets();\n  },\n  methods: {\n    fetchSavingsGoals() {\n      axios.get('http://localhost/savings.php', {\n        params: {\n          user_id: this.user_id\n        }\n      }).then(response => {\n        this.savingsGoals = response.data;\n      }).catch(error => {\n        console.error('Error fetching savings goals:', error);\n      });\n    },\n    fetchBudgets() {\n      axios.get('http://localhost/budget.php', {\n        params: {\n          user_id: this.user_id\n        }\n      }).then(response => {\n        this.budgets = response.data;\n      }).catch(error => {\n        console.error('Error fetching budgets:', error);\n      });\n    },\n    getBudgetInfo(category) {\n      const budget = this.budgets.find(b => b.category === category);\n      return budget ? {\n        allowance: budget.allowance,\n        amountSpent: budget.amountSpent,\n        remaining: budget.allowance - budget.amountSpent\n      } : {\n        allowance: 0,\n        amountSpent: 0,\n        remaining: 0\n      };\n    },\n    getSpent(category) {\n      const budget = this.budgets.find(b => b.category === category);\n      return budget ? budget.amountSpent : 0;\n    },\n    setGoal(goal) {\n      const newGoalValue = parseFloat(prompt(`Set new savings goal for ${goal.category}. Current goal: $${goal.goal}`, goal.goal));\n      if (!isNaN(newGoalValue) && newGoalValue > 0) {\n        this.updateGoal(goal, newGoalValue);\n      } else {\n        alert(\"Please enter a valid number greater than 0.\");\n      }\n    },\n    updateGoal(goal, newGoalValue) {\n      axios.put('http://localhost/savings.php', {\n        id: goal.id,\n        goal: newGoalValue\n      }).then(() => {\n        this.fetchSavingsGoals(); // Refresh the goals after update\n        alert(\"Savings goal updated successfully!\");\n      }).catch(error => {\n        console.error('Error updating goal:', error);\n        alert(\"Failed to update goal.\");\n      });\n    },\n    addNewGoal() {\n      if (!this.newGoalCategory || this.newGoalAmount <= 0) {\n        alert(\"Please fill all fields correctly.\");\n        return;\n      }\n      const goalData = {\n        user_id: this.user_id,\n        category: this.newGoalCategory,\n        goal: this.newGoalAmount\n      };\n      axios.post('http://localhost/savings.php', goalData).then(() => {\n        this.fetchSavingsGoals(); // Refresh the list of goals\n        alert(\"New savings goal added successfully!\");\n        this.newGoalCategory = ''; // Reset the input fields\n        this.newGoalAmount = 0;\n      }).catch(error => {\n        console.error('Error adding new savings goal:', error);\n        alert(\"Failed to add new savings goal.\");\n      });\n    },\n    progressBarWidth(goal) {\n      const budgetInfo = this.getBudgetInfo(goal.category);\n      let percentage = budgetInfo.remaining / goal.goal * 100;\n      percentage = Math.max(-100, Math.min(percentage, 100)); // Clamp percentage to 0-100%\n\n      // Determine the background color based on the percentage\n      const backgroundColor = percentage < 0 ? '#ff6f61' : '#4dd0e1';\n      return {\n        width: `${percentage}%`,\n        backgroundColor: backgroundColor\n      };\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","user_id","localStorage","getItem","savingsGoals","budgets","newGoalCategory","newGoalAmount","created","fetchSavingsGoals","fetchBudgets","methods","get","params","then","response","catch","error","console","getBudgetInfo","category","budget","find","b","allowance","amountSpent","remaining","getSpent","setGoal","goal","newGoalValue","parseFloat","prompt","isNaN","updateGoal","alert","put","id","addNewGoal","goalData","post","progressBarWidth","budgetInfo","percentage","Math","max","min","backgroundColor","width"],"sources":["/Users/eshangulati/Documents/GitHub/eshangulati.github.io/my-app/src/components/SavingsPage.vue"],"sourcesContent":["<template>\n    <div class=\"savings-container\">\n      <button @click=\"logout\" class=\"nav-button logout-button\">Logout</button>\n        <header class=\"savings-header\">\n            <h1>Savings Goals</h1>\n            <nav class=\"nav-buttons\">\n            <router-link :to=\"`/dashboard/${user_id}`\">\n                <button class=\"nav-button\">Dashboard</button>\n            </router-link>\n            <router-link :to=\"`/budget/${user_id}`\">\n                <button class=\"nav-button\">Budget</button>\n            </router-link>\n            <router-link :to=\"`/transaction/${user_id}`\">\n                <button class=\"nav-button\">Transactions</button>\n            </router-link>\n            <router-link :to=\"`/reports/${user_id}`\">\n                <button class=\"nav-button\">Reports</button>\n            </router-link>\n            </nav>\n        </header>\n        <div>\n            <h2>Add New Goal</h2>\n            <select v-model=\"newGoalCategory\" >\n                <option disabled value=\"\">Select Category</option>\n                <option value=\"Grocery\">Grocery</option>\n                <option value=\"Entertainment\">Entertainment</option>\n                <option value=\"Shopping\">Shopping</option>\n                <option value=\"Education\">Education</option>\n            </select>\n        <input v-model.number=\"newGoalAmount\" type=\"number\" placeholder=\"Goal Amount\" min=\"0.01\" step=\"0.01\" />\n      <button @click=\"addNewGoal\" class=\"nav-button\">Add Goal</button>\n        </div>\n        <div class=\"savings-circles\">\n            <div v-for=\"goal in savingsGoals\" :key=\"goal.id\" class=\"savings-goal\">\n            <div class=\"progress-bar-container\" :class=\"{'alert': getBudgetInfo(goal.category).remaining < 0}\">\n            <div class=\"progress-bar\" :style=\"progressBarWidth(goal)\"></div>\n            </div>\n                <p>{{ goal.category }}</p>\n                <p>${{ getBudgetInfo(goal.category).remaining }} saved of ${{ goal.goal }}</p>\n            <button @click=\"setGoal(goal)\" class=\"function_button\">Set Goal</button>\n            </div>\n        </div>\n    </div>\n  </template>\n  \n  <script>\n  import axios from 'axios';\n  \n  export default {\n    name : 'SavingsView',\n    data() {\n      return {\n        user_id: localStorage.getItem('user_id'),\n        savingsGoals: [],\n        budgets: [],\n        newGoalCategory: '',\n        newGoalAmount: 0\n      };\n    },\n    created() {\n      this.fetchSavingsGoals();\n      this.fetchBudgets();\n    },\n    methods: {\n      fetchSavingsGoals() {\n        axios.get('http://localhost/savings.php', { params: { user_id: this.user_id }})\n          .then(response => {\n            this.savingsGoals = response.data;\n          })\n          .catch(error => {\n            console.error('Error fetching savings goals:', error);\n          });\n      },\n      fetchBudgets() {\n        axios.get('http://localhost/budget.php', { params: { user_id: this.user_id }})\n          .then(response => {\n            this.budgets = response.data;\n          })\n          .catch(error => {\n            console.error('Error fetching budgets:', error);\n          });\n      },\n      getBudgetInfo(category) {\n        const budget = this.budgets.find(b => b.category === category);\n        return budget ? { \n        allowance: budget.allowance, \n        amountSpent: budget.amountSpent,\n        remaining: budget.allowance - budget.amountSpent} : { allowance: 0, amountSpent: 0, remaining: 0 };\n    },\n      getSpent(category) {\n        const budget = this.budgets.find(b => b.category === category);\n        return budget ? budget.amountSpent : 0;\n      },\n      setGoal(goal) {\n      const newGoalValue = parseFloat(prompt(`Set new savings goal for ${goal.category}. Current goal: $${goal.goal}`, goal.goal));\n      if (!isNaN(newGoalValue) && newGoalValue > 0) {\n        this.updateGoal(goal, newGoalValue);\n      } else {\n        alert(\"Please enter a valid number greater than 0.\");\n      }\n    },\n    updateGoal(goal, newGoalValue) {\n      axios.put('http://localhost/savings.php', {\n        id: goal.id,\n        goal: newGoalValue\n      })\n      .then(() => {\n        this.fetchSavingsGoals(); // Refresh the goals after update\n        alert(\"Savings goal updated successfully!\");\n      })\n      .catch(error => {\n        console.error('Error updating goal:', error);\n        alert(\"Failed to update goal.\");\n      });\n    },\n    addNewGoal() {\n    if (!this.newGoalCategory || this.newGoalAmount <= 0) {\n      alert(\"Please fill all fields correctly.\");\n      return;\n    }\n    \n\n    const goalData = {\n      user_id: this.user_id,\n      category: this.newGoalCategory,\n      goal: this.newGoalAmount\n    };\n    axios.post('http://localhost/savings.php', goalData)\n      .then(() => {\n        this.fetchSavingsGoals();  // Refresh the list of goals\n        alert(\"New savings goal added successfully!\");\n        this.newGoalCategory = '';  // Reset the input fields\n        this.newGoalAmount = 0;\n      })\n      .catch(error => {\n        console.error('Error adding new savings goal:', error);\n        alert(\"Failed to add new savings goal.\");\n      });\n  },\n  progressBarWidth(goal) {\n    const budgetInfo = this.getBudgetInfo(goal.category);\n    let percentage = (budgetInfo.remaining / goal.goal) * 100;\n    percentage = Math.max(-100, Math.min(percentage, 100)); // Clamp percentage to 0-100%\n  \n  // Determine the background color based on the percentage\n    const backgroundColor = percentage < 0 ? '#ff6f61' : '#4dd0e1';\n\n    return {\n        width: `${percentage}%`,\n        backgroundColor: backgroundColor\n    };\n}\n\n  \n}\n  };\n  </script>\n  \n  <style scoped>\n  .savings-container {\n      padding: 20px;\n  }  \n  .savings-header {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      flex-wrap: wrap; /* Allows header content to wrap on smaller screens */\n  }\n  \n  .nav-buttons button {\n      margin: 0 5px;\n      padding: 10px 20px;\n      border: none;\n      border-radius: 10px;\n      background-color: #4dd0e1;\n      color: white;\n      cursor: pointer;\n      font-size: 16px;\n      transition: background-color 0.3s;\n  }\n  \n  .savings-circles {\n      display: flex;\n      flex-wrap: wrap;\n      justify-content: space-around;\n  }\n  \n  .savings-goal {\n      width: 100%; /* Full width on small screens */\n      margin: 10px 0;\n      padding: 10px;\n      background-color: #f3f3f3;\n      box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n  }\n  \n  .progress-bar-container {\n      width: 100%;\n      height: 20px;\n      background-color: #ddd;\n      border-radius: 10px;\n      overflow: hidden;\n      position: relative;\n  }\n  \n  .progress-bar {\n      height: 100%;\n      background-color: #4dd0e1;\n      border-radius: 10px;\n      transition: width 0.5s ease;\n  }\n  \n  /* Media Queries for smaller devices */\n  @media (max-width: 768px) {\n      .savings-header {\n          flex-direction: column;\n          align-items: stretch;\n      }\n  \n      .nav-buttons {\n          width: 100%; /* Full width for easier navigation on small devices */\n          margin-top: 10px;\n      }\n  \n      .nav-buttons button, .nav-button {\n          width: 100%; /* Full-width buttons for better accessibility */\n          margin: 5px 0;\n          font-size: 12px;\n      }\n  \n      .savings-goal {\n          padding: 8px; /* Slightly less padding to fit smaller screens better */\n          font-size: 14px; /* Smaller font size for content */\n      }\n  }\n  \n  @media (max-width: 480px) {\n      .savings-header {\n          padding: 10px;\n      }\n  \n      .nav-button {\n          font-size: 14px;\n          padding: 8px 10px;\n      }\n  }\n  </style>\n  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}